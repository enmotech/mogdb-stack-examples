apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ include "install.managerName" . }}
  labels:
    {{- include "install.labels" . | indent 4 }}
  {{- if .Values.annotations }}
  annotations:
  {{- toYaml .Values.annotations | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "install.labels" . | indent 6 }}
  template:
    metadata:
      labels:
        {{- include "install.labels" . | indent 8 }}
      {{- if .Values.annotations }}
      annotations:
      {{- toYaml .Values.annotations | nindent 8 }}
      {{- end }}
    spec:
      containers:
        - name: operator
          image: {{ required "operator.image is required" .Values.operator.image | quote }}
          imagePullPolicy: {{ .Values.operator.imagePullPolicy }}
          env:
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: CONTROL_PLANE
              value: "{{ .Values.enableControl }}"
          {{- if .Values.enableWebhook }}
          ports:
            - protocol: TCP
              name: webhook-server
              containerPort: {{ .Values.webhookPort }}
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
          {{- end }}
          command:
            - /usr/local/bin/multi-operator
          args:
            - "--debug={{ .Values.debug }}"
            - "--webhook-port={{ .Values.webhookPort }}"
            - "--enable-webhook={{ .Values.enableWebhook }}"
            - "--leader-elect={{ .Values.enableLeaderElection }}"
            - "--leader-election-id={{ .Values.leaderElectionID }}"
            - "--zap-time-encoding=iso8601"
            - "--health-probe-bind-address=:8081"
            {{- if .Values.singleNamespace }}
            - "--namespace={{ .Release.Namespace }}"
            {{- end }}
            {{- if .Values.enablePrometheusMonitor }}
            - "--metrics-bind-address=127.0.0.1:8080"
            {{- end }}
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            periodSeconds: 10
            initialDelaySeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            periodSeconds: 20
            initialDelaySeconds: 15
          securityContext:
            allowPrivilegeEscalation: false
        {{- if .Values.operator.resources }}
          resources:
        {{- toYaml .Values.operator.resources | nindent 12 }}
        {{- end }}
      {{- if .Values.enableWebhook }}
            volumes:
              - name: cert
                secret:
                  defaultMode: 420
                  secretName: {{ include "install.certSecretName" . }}
            {{- end }}
      securityContext:
        runAsNonRoot: false
      terminationGracePeriodSeconds: 10
      {{- include "install.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "install.serviceAccountName" .}}
